{"ast":null,"code":"//import requestPromise from 'request-promise'\nimport rp from'request-promise';var BASE_URL='http://localhost:3000/api/';function fetchAll(uri){var qs=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return rp({uri:BASE_URL+uri,qs:qs,json:true}).catch(function(err){return console.log(err);});}function post(uri){var body=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return rp({uri:BASE_URL+uri,body:body,json:true,method:'post'});}export var postCost=function postCost(cost){return post(\"costs\",cost);};export var fetchUsers=function fetchUsers(){return fetchAll(\"users\");};export var fetchCosts=function fetchCosts(){var paidBy=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return fetchAll(\"costs\",{paidBy:paidBy});};","map":{"version":3,"sources":["/home/onabanji/M2 courses/GLI_Marc-Christie/TP/abiola_onabanji_reacte_m2_ccn/src/model/index.js"],"names":["rp","BASE_URL","fetchAll","uri","qs","json","catch","err","console","log","post","body","method","postCost","cost","fetchUsers","fetchCosts","paidBy"],"mappings":"AAAA;AACA,MAAOA,CAAAA,EAAP,KAAe,iBAAf,CAEA,GAAMC,CAAAA,QAAQ,CAAG,4BAAjB,CAEA,QAASC,CAAAA,QAAT,CAAkBC,GAAlB,CAAgC,IAATC,CAAAA,EAAS,2DAAJ,EAAI,CAC5B,MAAOJ,CAAAA,EAAE,CAAC,CACNG,GAAG,CAAEF,QAAQ,CAAGE,GADV,CAENC,EAAE,CAAFA,EAFM,CAGNC,IAAI,CAAE,IAHA,CAAD,CAAF,CAKNC,KALM,CAKA,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EALH,CAAP,CAMH,CAED,QAASG,CAAAA,IAAT,CAAcP,GAAd,CAA8B,IAAXQ,CAAAA,IAAW,2DAAJ,EAAI,CAC1B,MAAOX,CAAAA,EAAE,CAAC,CACNG,GAAG,CAAEF,QAAQ,CAAGE,GADV,CAENQ,IAAI,CAAJA,IAFM,CAGNN,IAAI,CAAE,IAHA,CAINO,MAAM,CAAE,MAJF,CAAD,CAAT,CAMH,CAED,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,QAAUJ,CAAAA,IAAI,CAAC,OAAD,CAAUI,IAAV,CAAd,EAAjB,CACP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMb,CAAAA,QAAQ,CAAC,OAAD,CAAd,EAAnB,CACP,MAAO,IAAMc,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAACC,CAAAA,MAAD,2DAAU,EAAV,OAAiBf,CAAAA,QAAQ,CAAC,OAAD,CAAU,CAAEe,MAAM,CAANA,MAAF,CAAV,CAAzB,EAAnB","sourcesContent":["//import requestPromise from 'request-promise'\nimport rp from 'request-promise'\n\nconst BASE_URL = 'http://localhost:3000/api/'\n\nfunction fetchAll(uri, qs = {}) {\n    return rp({ \n        uri: BASE_URL + uri, \n        qs, \n        json: true\n    })\n    .catch(err => console.log(err))\n}\n\nfunction post(uri, body = {}) {\n    return rp({\n        uri: BASE_URL + uri,\n        body,\n        json: true,\n        method: 'post'\n    })\n}\n\nexport const postCost = (cost) => post(\"costs\", cost)\nexport const fetchUsers = () => fetchAll(\"users\")\nexport const fetchCosts = (paidBy = {}) => fetchAll(\"costs\", { paidBy })"]},"metadata":{},"sourceType":"module"}